<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'test.private_services_locator' shared service.

return $this->services['test.private_services_locator'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array('controller_name_converter' => function () {
    return ($this->privates['controller_name_converter'] ?? $this->privates['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser(($this->services['kernel'] ?? $this->get('kernel', 1))));
}, 'controller_resolver' => function () {
    return ($this->privates['controller_resolver'] ?? $this->getControllerResolverService());
}, 'argument_metadata_factory' => function () {
    return ($this->privates['argument_metadata_factory'] ?? $this->privates['argument_metadata_factory'] = new \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory());
}, 'argument_resolver' => function () {
    return ($this->privates['argument_resolver'] ?? $this->getArgumentResolverService());
}, 'argument_resolver.request_attribute' => function () {
    return ($this->privates['argument_resolver.request_attribute'] ?? $this->privates['argument_resolver.request_attribute'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver());
}, 'argument_resolver.request' => function () {
    return ($this->privates['argument_resolver.request'] ?? $this->privates['argument_resolver.request'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver());
}, 'argument_resolver.session' => function () {
    return ($this->privates['argument_resolver.session'] ?? $this->privates['argument_resolver.session'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver());
}, 'argument_resolver.service' => function () {
    return ($this->privates['argument_resolver.service'] ?? $this->load('getArgumentResolver_ServiceService.php'));
}, 'argument_resolver.default' => function () {
    return ($this->privates['argument_resolver.default'] ?? $this->privates['argument_resolver.default'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver());
}, 'argument_resolver.variadic' => function () {
    return ($this->privates['argument_resolver.variadic'] ?? $this->privates['argument_resolver.variadic'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver());
}, 'response_listener' => function () {
    return ($this->privates['response_listener'] ?? $this->privates['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8'));
}, 'streamed_response_listener' => function () {
    return ($this->privates['streamed_response_listener'] ?? $this->privates['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener());
}, 'locale_listener' => function () {
    return ($this->privates['locale_listener'] ?? $this->getLocaleListenerService());
}, 'validate_request_listener' => function () {
    return ($this->privates['validate_request_listener'] ?? $this->privates['validate_request_listener'] = new \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener());
}, 'resolve_controller_name_subscriber' => function () {
    return ($this->privates['resolve_controller_name_subscriber'] ?? $this->getResolveControllerNameSubscriberService());
}, 'parameter_bag' => function () {
    return ($this->privates['parameter_bag'] ?? $this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this));
}, 'file_locator' => function () {
    return ($this->privates['file_locator'] ?? $this->privates['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->targetDirs[2].'/Resources'), array(0 => $this->targetDirs[2])));
}, 'config_cache_factory' => function () {
    return ($this->privates['config_cache_factory'] ?? $this->getConfigCacheFactoryService());
}, 'dependency_injection.config.container_parameters_resource_checker' => function () {
    return ($this->privates['dependency_injection.config.container_parameters_resource_checker'] ?? $this->privates['dependency_injection.config.container_parameters_resource_checker'] = new \Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker($this));
}, 'config.resource.self_checking_resource_checker' => function () {
    return ($this->privates['config.resource.self_checking_resource_checker'] ?? $this->privates['config.resource.self_checking_resource_checker'] = new \Symfony\Component\Config\Resource\SelfCheckingResourceChecker());
}, 'fragment.handler' => function () {
    return ($this->privates['fragment.handler'] ?? $this->load('getFragment_HandlerService.php'));
}, 'fragment.renderer.inline' => function () {
    return ($this->privates['fragment.renderer.inline'] ?? $this->load('getFragment_Renderer_InlineService.php'));
}, 'console.error_listener' => function () {
    return ($this->privates['console.error_listener'] ?? $this->load('getConsole_ErrorListenerService.php'));
}, 'console.command.about' => function () {
    return ($this->privates['console.command.about'] ?? $this->load('getConsole_Command_AboutService.php'));
}, 'console.command.assets_install' => function () {
    return ($this->privates['console.command.assets_install'] ?? $this->load('getConsole_Command_AssetsInstallService.php'));
}, 'console.command.cache_clear' => function () {
    return ($this->privates['console.command.cache_clear'] ?? $this->load('getConsole_Command_CacheClearService.php'));
}, 'console.command.cache_pool_clear' => function () {
    return ($this->privates['console.command.cache_pool_clear'] ?? $this->load('getConsole_Command_CachePoolClearService.php'));
}, 'console.command.cache_pool_prune' => function () {
    return ($this->privates['console.command.cache_pool_prune'] ?? $this->load('getConsole_Command_CachePoolPruneService.php'));
}, 'console.command.cache_pool_delete' => function () {
    return ($this->privates['console.command.cache_pool_delete'] ?? $this->load('getConsole_Command_CachePoolDeleteService.php'));
}, 'console.command.cache_warmup' => function () {
    return ($this->privates['console.command.cache_warmup'] ?? $this->load('getConsole_Command_CacheWarmupService.php'));
}, 'console.command.config_debug' => function () {
    return ($this->privates['console.command.config_debug'] ?? $this->load('getConsole_Command_ConfigDebugService.php'));
}, 'console.command.config_dump_reference' => function () {
    return ($this->privates['console.command.config_dump_reference'] ?? $this->load('getConsole_Command_ConfigDumpReferenceService.php'));
}, 'console.command.container_debug' => function () {
    return ($this->privates['console.command.container_debug'] ?? $this->load('getConsole_Command_ContainerDebugService.php'));
}, 'console.command.debug_autowiring' => function () {
    return ($this->privates['console.command.debug_autowiring'] ?? $this->load('getConsole_Command_DebugAutowiringService.php'));
}, 'console.command.event_dispatcher_debug' => function () {
    return ($this->privates['console.command.event_dispatcher_debug'] ?? $this->load('getConsole_Command_EventDispatcherDebugService.php'));
}, 'console.command.router_debug' => function () {
    return ($this->privates['console.command.router_debug'] ?? $this->load('getConsole_Command_RouterDebugService.php'));
}, 'console.command.router_match' => function () {
    return ($this->privates['console.command.router_match'] ?? $this->load('getConsole_Command_RouterMatchService.php'));
}, 'console.command.yaml_lint' => function () {
    return ($this->privates['console.command.yaml_lint'] ?? $this->load('getConsole_Command_YamlLintService.php'));
}, 'cache.validator' => function () {
    return ($this->privates['cache.validator'] ?? $this->getCache_ValidatorService());
}, 'cache.serializer' => function () {
    return ($this->privates['cache.serializer'] ?? $this->getCache_SerializerService());
}, 'cache.annotations' => function () {
    return ($this->privates['cache.annotations'] ?? $this->getCache_AnnotationsService());
}, 'cache.default_clearer' => function () {
    return ($this->services['cache.app_clearer'] ?? $this->load('getCache_AppClearerService.php'));
}, 'test.client.history' => function () {
    return new \Symfony\Component\BrowserKit\History();
}, 'test.client.cookiejar' => function () {
    return new \Symfony\Component\BrowserKit\CookieJar();
}, 'test.session.listener' => function () {
    return ($this->privates['test.session.listener'] ?? $this->getTest_Session_ListenerService());
}, 'assets.packages' => function () {
    return ($this->privates['assets.packages'] ?? $this->getAssets_PackagesService());
}, 'assets.context' => function () {
    return ($this->privates['assets.context'] ?? $this->getAssets_ContextService());
}, 'assets.empty_version_strategy' => function () {
    return ($this->privates['assets.empty_version_strategy'] ?? $this->privates['assets.empty_version_strategy'] = new \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy());
}, 'assets._default_package' => function () {
    return ($this->privates['assets._default_package'] ?? $this->getAssets_DefaultPackageService());
}, 'templating.name_parser' => function () {
    return ($this->privates['templating.name_parser'] ?? $this->privates['templating.name_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser(($this->services['kernel'] ?? $this->get('kernel', 1))));
}, 'templating.filename_parser' => function () {
    return ($this->privates['templating.filename_parser'] ?? $this->privates['templating.filename_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser());
}, 'templating.locator' => function () {
    return ($this->privates['templating.locator'] ?? $this->getTemplating_LocatorService());
}, 'templating.finder' => function () {
    return ($this->privates['templating.finder'] ?? $this->load('getTemplating_FinderService.php'));
}, 'templating.cache_warmer.template_paths' => function () {
    return ($this->privates['templating.cache_warmer.template_paths'] ?? $this->load('getTemplating_CacheWarmer_TemplatePathsService.php'));
}, 'templating.loader.filesystem' => function () {
    return ($this->services['templating.loader'] ?? $this->load('getTemplating_LoaderService.php'));
}, 'profiler.storage' => function () {
    return ($this->privates['profiler.storage'] ?? $this->privates['profiler.storage'] = new \Symfony\Component\HttpKernel\Profiler\FileProfilerStorage(('file:'.$this->targetDirs[0].'/profiler')));
}, 'profiler_listener' => function () {
    return ($this->privates['profiler_listener'] ?? $this->getProfilerListenerService());
}, 'data_collector.config' => function () {
    return ($this->privates['data_collector.config'] ?? $this->getDataCollector_ConfigService());
}, 'data_collector.request' => function () {
    return ($this->privates['data_collector.request'] ?? $this->privates['data_collector.request'] = new \Symfony\Component\HttpKernel\DataCollector\RequestDataCollector());
}, 'data_collector.ajax' => function () {
    return ($this->privates['data_collector.ajax'] ?? $this->privates['data_collector.ajax'] = new \Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector());
}, 'data_collector.exception' => function () {
    return ($this->privates['data_collector.exception'] ?? $this->privates['data_collector.exception'] = new \Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector());
}, 'data_collector.events' => function () {
    return ($this->privates['data_collector.events'] ?? $this->privates['data_collector.events'] = new \Symfony\Component\HttpKernel\DataCollector\EventDataCollector(NULL));
}, 'data_collector.logger' => function () {
    return ($this->privates['data_collector.logger'] ?? $this->getDataCollector_LoggerService());
}, 'data_collector.time' => function () {
    return ($this->privates['data_collector.time'] ?? $this->privates['data_collector.time'] = new \Symfony\Component\HttpKernel\DataCollector\TimeDataCollector(($this->services['kernel'] ?? $this->get('kernel', 3)), NULL));
}, 'data_collector.memory' => function () {
    return ($this->privates['data_collector.memory'] ?? $this->privates['data_collector.memory'] = new \Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector());
}, 'data_collector.router' => function () {
    return ($this->privates['data_collector.router'] ?? $this->privates['data_collector.router'] = new \Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector());
}, 'data_collector.cache' => function () {
    return ($this->privates['data_collector.cache'] ?? $this->getDataCollector_CacheService());
}, 'debug.debug_handlers_listener' => function () {
    return ($this->privates['debug.debug_handlers_listener'] ?? $this->getDebug_DebugHandlersListenerService());
}, 'debug.file_link_formatter' => function () {
    return ($this->privates['debug.file_link_formatter'] ?? $this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL));
}, 'routing.resolver' => function () {
    return ($this->privates['routing.resolver'] ?? $this->load('getRouting_ResolverService.php'));
}, 'routing.loader.xml' => function () {
    return ($this->privates['routing.loader.xml'] ?? $this->load('getRouting_Loader_XmlService.php'));
}, 'routing.loader.yml' => function () {
    return ($this->privates['routing.loader.yml'] ?? $this->load('getRouting_Loader_YmlService.php'));
}, 'routing.loader.php' => function () {
    return ($this->privates['routing.loader.php'] ?? $this->load('getRouting_Loader_PhpService.php'));
}, 'routing.loader.glob' => function () {
    return ($this->privates['routing.loader.glob'] ?? $this->load('getRouting_Loader_GlobService.php'));
}, 'routing.loader.directory' => function () {
    return ($this->privates['routing.loader.directory'] ?? $this->load('getRouting_Loader_DirectoryService.php'));
}, 'routing.loader.service' => function () {
    return ($this->privates['routing.loader.service'] ?? $this->privates['routing.loader.service'] = new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
}, 'router.default' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'router.request_context' => function () {
    return ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService());
}, 'router.cache_warmer' => function () {
    return ($this->privates['router.cache_warmer'] ?? $this->load('getRouter_CacheWarmerService.php'));
}, 'router_listener' => function () {
    return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
}, 'routing.loader.annotation' => function () {
    return ($this->privates['routing.loader.annotation'] ?? $this->load('getRouting_Loader_AnnotationService.php'));
}, 'routing.loader.annotation.directory' => function () {
    return ($this->privates['routing.loader.annotation.directory'] ?? $this->load('getRouting_Loader_Annotation_DirectoryService.php'));
}, 'routing.loader.annotation.file' => function () {
    return ($this->privates['routing.loader.annotation.file'] ?? $this->load('getRouting_Loader_Annotation_FileService.php'));
}, 'annotations.reader' => function () {
    return ($this->privates['annotations.reader'] ?? $this->load('getAnnotations_ReaderService.php'));
}, 'annotations.dummy_registry' => function () {
    return ($this->privates['annotations.dummy_registry'] ?? $this->load('getAnnotations_DummyRegistryService.php'));
}, 'annotations.cached_reader' => function () {
    return ($this->privates['annotations.cached_reader'] ?? $this->load('getAnnotations_CachedReaderService.php'));
}, 'annotations.cache_warmer' => function () {
    return ($this->privates['annotations.cache_warmer'] ?? $this->load('getAnnotations_CacheWarmerService.php'));
}, 'annotations.cache' => function () {
    return ($this->privates['annotations.cache'] ?? $this->load('getAnnotations_CacheService.php'));
}, 'twig.app_variable' => function () {
    return ($this->privates['twig.app_variable'] ?? $this->getTwig_AppVariableService());
}, 'twig.cache_warmer' => function () {
    return ($this->privates['twig.cache_warmer'] ?? $this->load('getTwig_CacheWarmerService.php'));
}, 'twig.template_iterator' => function () {
    return ($this->privates['twig.template_iterator'] ?? $this->privates['twig.template_iterator'] = new \Symfony\Bundle\TwigBundle\TemplateIterator(($this->services['kernel'] ?? $this->get('kernel', 1)), $this->targetDirs[2], array()));
}, 'twig.template_cache_warmer' => function () {
    return ($this->privates['twig.template_cache_warmer'] ?? $this->load('getTwig_TemplateCacheWarmerService.php'));
}, 'twig.extension.profiler' => function () {
    return ($this->privates['twig.extension.profiler'] ?? $this->getTwig_Extension_ProfilerService());
}, 'twig.profile' => function () {
    return ($this->privates['twig.profile'] ?? $this->privates['twig.profile'] = new \Twig\Profiler\Profile());
}, 'data_collector.twig' => function () {
    return ($this->privates['data_collector.twig'] ?? $this->getDataCollector_TwigService());
}, 'twig.extension.trans' => function () {
    return ($this->privates['twig.extension.trans'] ?? $this->privates['twig.extension.trans'] = new \Symfony\Bridge\Twig\Extension\TranslationExtension(NULL));
}, 'twig.extension.assets' => function () {
    return ($this->privates['twig.extension.assets'] ?? $this->getTwig_Extension_AssetsService());
}, 'twig.extension.code' => function () {
    return ($this->privates['twig.extension.code'] ?? $this->getTwig_Extension_CodeService());
}, 'twig.extension.routing' => function () {
    return ($this->privates['twig.extension.routing'] ?? $this->getTwig_Extension_RoutingService());
}, 'twig.extension.yaml' => function () {
    return ($this->privates['twig.extension.yaml'] ?? $this->privates['twig.extension.yaml'] = new \Symfony\Bridge\Twig\Extension\YamlExtension());
}, 'twig.extension.expression' => function () {
    return ($this->privates['twig.extension.expression'] ?? $this->privates['twig.extension.expression'] = new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
}, 'twig.extension.httpkernel' => function () {
    return ($this->privates['twig.extension.httpkernel'] ?? $this->privates['twig.extension.httpkernel'] = new \Symfony\Bridge\Twig\Extension\HttpKernelExtension());
}, 'twig.runtime.httpkernel' => function () {
    return ($this->privates['twig.runtime.httpkernel'] ?? $this->load('getTwig_Runtime_HttpkernelService.php'));
}, 'twig.extension.httpfoundation' => function () {
    return ($this->privates['twig.extension.httpfoundation'] ?? $this->getTwig_Extension_HttpfoundationService());
}, 'twig.extension.debug' => function () {
    return ($this->privates['twig.extension.debug'] ?? $this->privates['twig.extension.debug'] = new \Twig\Extension\DebugExtension());
}, 'twig.exception_listener' => function () {
    return ($this->privates['twig.exception_listener'] ?? $this->load('getTwig_ExceptionListenerService.php'));
}, 'twig.configurator.environment' => function () {
    return ($this->privates['twig.configurator.environment'] ?? $this->getTwig_Configurator_EnvironmentService());
}, 'twig.runtime_loader' => function () {
    return ($this->privates['twig.runtime_loader'] ?? $this->getTwig_RuntimeLoaderService());
}, 'twig.loader.filesystem' => function () {
    return ($this->privates['twig.loader.filesystem'] ?? $this->getTwig_Loader_FilesystemService());
}, 'templating.engine.twig' => function () {
    return ($this->services['templating'] ?? $this->load('getTemplatingService.php'));
}, 'twig.command.debug' => function () {
    return ($this->privates['twig.command.debug'] ?? $this->load('getTwig_Command_DebugService.php'));
}, 'twig.command.lint' => function () {
    return ($this->privates['twig.command.lint'] ?? $this->load('getTwig_Command_LintService.php'));
}, 'monitor.command.health_check' => function () {
    return ($this->services['console.command.public_alias.monitor.command.health_check'] ?? $this->load('getConsole_Command_PublicAlias_Monitor_Command_HealthCheckService.php'));
}, 'monitor.command.list_checks' => function () {
    return ($this->services['console.command.public_alias.monitor.command.list_checks'] ?? $this->load('getConsole_Command_PublicAlias_Monitor_Command_ListChecksService.php'));
}, 'logger' => function () {
    return ($this->privates['logger'] ?? $this->privates['logger'] = new \Symfony\Component\HttpKernel\Log\Logger());
}, 'cache.app.recorder_inner' => function () {
    return ($this->privates['cache.app.recorder_inner'] ?? $this->getCache_App_RecorderInnerService());
}, 'cache.system.recorder_inner' => function () {
    return ($this->privates['cache.system.recorder_inner'] ?? $this->getCache_System_RecorderInnerService());
}, 'cache.validator.recorder_inner' => function () {
    return ($this->privates['cache.validator.recorder_inner'] ?? $this->getCache_Validator_RecorderInnerService());
}, 'cache.serializer.recorder_inner' => function () {
    return ($this->privates['cache.serializer.recorder_inner'] ?? $this->getCache_Serializer_RecorderInnerService());
}, 'cache.annotations.recorder_inner' => function () {
    return ($this->privates['cache.annotations.recorder_inner'] ?? $this->getCache_Annotations_RecorderInnerService());
}, 'Psr\\Container\\ContainerInterface' => function () {
    return $this;
}, 'Symfony\\Component\\DependencyInjection\\ContainerInterface' => function () {
    return $this;
}, 'Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface' => function () {
    return ($this->privates['parameter_bag'] ?? $this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this));
}, 'Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface' => function () {
    return ($this->privates['parameter_bag'] ?? $this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this));
}, 'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => function () {
    return ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());
}, 'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => function () {
    return ($this->services['http_kernel'] ?? $this->getHttpKernelService());
}, 'Symfony\\Component\\HttpFoundation\\RequestStack' => function () {
    return ($this->services['request_stack'] ?? $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack());
}, 'Symfony\\Component\\HttpKernel\\KernelInterface' => function () {
    return ($this->services['kernel'] ?? $this->get('kernel', 1));
}, 'Symfony\\Component\\Filesystem\\Filesystem' => function () {
    return ($this->services['filesystem'] ?? $this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem());
}, 'Symfony\\Component\\HttpKernel\\Config\\FileLocator' => function () {
    return ($this->privates['file_locator'] ?? $this->privates['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->targetDirs[2].'/Resources'), array(0 => $this->targetDirs[2])));
}, 'Psr\\Cache\\CacheItemPoolInterface' => function () {
    return ($this->services['cache.app'] ?? $this->getCache_AppService());
}, 'Symfony\\Component\\Cache\\Adapter\\AdapterInterface' => function () {
    return ($this->services['cache.app'] ?? $this->getCache_AppService());
}, 'Symfony\\Component\\Asset\\Packages' => function () {
    return ($this->privates['assets.packages'] ?? $this->getAssets_PackagesService());
}, 'Symfony\\Component\\HttpKernel\\Debug\\FileLinkFormatter' => function () {
    return ($this->privates['debug.file_link_formatter'] ?? $this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL));
}, 'Symfony\\Component\\Routing\\RouterInterface' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'Symfony\\Component\\Routing\\RequestContextAwareInterface' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'Symfony\\Component\\Routing\\RequestContext' => function () {
    return ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService());
}, 'annotation_reader' => function () {
    return ($this->privates['annotations.cached_reader'] ?? $this->load('getAnnotations_CachedReaderService.php'));
}, 'Doctrine\\Common\\Annotations\\Reader' => function () {
    return ($this->privates['annotations.cached_reader'] ?? $this->load('getAnnotations_CachedReaderService.php'));
}, 'Twig_Environment' => function () {
    return ($this->services['twig'] ?? $this->getTwigService());
}, 'Twig\\Environment' => function () {
    return ($this->services['twig'] ?? $this->getTwigService());
}, 'argument_resolver.controller_locator' => function () {
    return ($this->privates['.service_locator.9_yeNH1'] ?? $this->privates['.service_locator.9_yeNH1'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array()));
}, 'Symfony\\Component\\Templating\\EngineInterface' => function () {
    return ($this->services['templating'] ?? $this->load('getTemplatingService.php'));
}, 'Symfony\\Bundle\\FrameworkBundle\\Templating\\EngineInterface' => function () {
    return ($this->services['templating'] ?? $this->load('getTemplatingService.php'));
}, 'twig.loader' => function () {
    return ($this->privates['twig.loader.filesystem'] ?? $this->getTwig_Loader_FilesystemService());
}, 'Psr\\Log\\LoggerInterface' => function () {
    return ($this->privates['logger'] ?? $this->privates['logger'] = new \Symfony\Component\HttpKernel\Log\Logger());
}));
